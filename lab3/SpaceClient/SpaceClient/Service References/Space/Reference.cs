//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpaceClient.Space {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Starship", Namespace="http://schemas.datacontract.org/2004/07/Space")]
    [System.SerializableAttribute()]
    public partial class Starship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceClient.Space.Person CapitainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpaceClient.Space.Person[] CrewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceClient.Space.Person Capitain {
            get {
                return this.CapitainField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitainField, value) != true)) {
                    this.CapitainField = value;
                    this.RaisePropertyChanged("Capitain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpaceClient.Space.Person[] Crew {
            get {
                return this.CrewField;
            }
            set {
                if ((object.ReferenceEquals(this.CrewField, value) != true)) {
                    this.CrewField = value;
                    this.RaisePropertyChanged("Crew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Space")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Space.IBlackHole")]
    public interface IBlackHole {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackHole/PullStarship", ReplyAction="http://tempuri.org/IBlackHole/PullStarshipResponse")]
        SpaceClient.Space.Starship PullStarship(SpaceClient.Space.Starship ship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackHole/PullStarship", ReplyAction="http://tempuri.org/IBlackHole/PullStarshipResponse")]
        System.Threading.Tasks.Task<SpaceClient.Space.Starship> PullStarshipAsync(SpaceClient.Space.Starship ship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackHole/UltimateAnswer", ReplyAction="http://tempuri.org/IBlackHole/UltimateAnswerResponse")]
        string UltimateAnswer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackHole/UltimateAnswer", ReplyAction="http://tempuri.org/IBlackHole/UltimateAnswerResponse")]
        System.Threading.Tasks.Task<string> UltimateAnswerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlackHoleChannel : SpaceClient.Space.IBlackHole, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlackHoleClient : System.ServiceModel.ClientBase<SpaceClient.Space.IBlackHole>, SpaceClient.Space.IBlackHole {
        
        public BlackHoleClient() {
        }
        
        public BlackHoleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlackHoleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlackHoleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlackHoleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SpaceClient.Space.Starship PullStarship(SpaceClient.Space.Starship ship) {
            return base.Channel.PullStarship(ship);
        }
        
        public System.Threading.Tasks.Task<SpaceClient.Space.Starship> PullStarshipAsync(SpaceClient.Space.Starship ship) {
            return base.Channel.PullStarshipAsync(ship);
        }
        
        public string UltimateAnswer() {
            return base.Channel.UltimateAnswer();
        }
        
        public System.Threading.Tasks.Task<string> UltimateAnswerAsync() {
            return base.Channel.UltimateAnswerAsync();
        }
    }
}
